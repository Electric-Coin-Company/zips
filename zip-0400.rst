::

  ZIP: 400
  Title: Format of Zcash wallet.dat files
  Author: Duke Leto <duke@leto.net>
  Category: XXX
  Created: 2018-12-15
  License: MIT

Terminology
===========

The key words "MUST", "MUST NOT", and "MAY" in this document are to be interpreted as described in RFC 2119.
[#RFC2119]_

Abstract
===========

This is a Standards ZIP describing the format of Zcash wallet.dat files.

Motivation
===========

"We need to understand the current wallet format in order to design a new format." -- Daira
    https://github.com/zcash/zcash/issues/2312

Specification
===============

Zcash wallet.dat format is inherited from Bitcoin 0.11 wallet format with
various additions to store data related to Sprout and Sapling shielded
addresses, and transactions involving them. Transparent addresses and
transactions involving them are identical, with exceptions being mentioned in
this document.

The wallet.dat is a BerkeleyDB BTree (binary tree) binary file, where all
contents MUST be in a subtree called "main". Zcash nodes MUST NOT store
any data outside of the "main" subtree to maintain backward compatibility
with software meant to work on Bitcoin wallets.

The binary tree has keys and values. The keys consist of multiple units of
data, a length, a type and an actual key value, in that order. For example, an
entry for the pubkey of a transparent address MUST have type "key", and length
MUST correspond to the length of the string "key", i.e. 3. This number is
stored as an `unsigned char`.

The rest of the data in the BTree key is actual public key data. The value of
each key stores the private key associated with that pubkey and the SHA256 of
the public and private key concatenated together.

Similarly, there is a "zkey" type which stored data related to Sprout shielded
addresses. This key type simply stores a public and private key, without a
hash of the values. This means that these entries take up much less space
than transparent keys.

The reader should note that Zcash addresses of any kind never appear in a
wallet.dat file. Only public keys and private keys exist in wallet.dat files,
addresses never appear or are stored in any way, they are calculated from
pubkeys by nodes when the wallet is loaded.

Here is a list of each key type with the kind of data that is stored:

  * bestblock
  * defaultkey
  * hdseed
  * key         - transparent pubkey and privkey, with sha256(pubkey+privkey)
  * keymeta
  * minversion
  * name
  * orderposnext
  * pool        - keypool pub/private keypair
  * purpose
  * sapzkey     - Sapling zaddr pubkey and privkey
  * sapzkeymeta - metadata about Sapling pubkeys
  * tx          - transaction data
  * version
  * witnesscachesize
  * zkey        - Sprout zaddr pubkey and privkey
  * zkeymeta    - metadata about Sprout pubkey

The types zkey, zkeymeta, sapzkey are sapzkeymeta Zcash additions to the Bitcoin
wallet format, they do not exist in Bitcoin Core wallets.

A full description of each key type and the values they store is below.

bestblock
=========

There MUST be only one `bestblock` key per wallet.

defaultkey
==========

  * Default transparent public key of the wallet.
  * There MUST be only one `defaultkey` key per wallet.
  * The pubkey value of this key MUST exist in the current wallet as a
    public, private key pair, stored in an element of type `key`.
  * Value: Hex string, high nybble first.

version
=======

There MUST be only one `version` key per wallet.

Value: unsigned integer


References
==========

.. [#RFC2119] `Key words for use in RFCs to Indicate Requirement Levels <https://tools.ietf.org/html/rfc2119>`_
